'use strict'; (self.webpackChunkbutton_with_sound = self.webpackChunkbutton_with_sound || []).push([[557], { 5126: function (e, t, s) { s.r(t), s.d(t, { default: function () { return Ge } }); const i = s(3396); const n = s(7139); const o = s(9242); const r = s(5080); const l = (0, i._)('br', null, null, -1); const a = { class: 'quiz' }; function c (e, t, s, c, u, h) { const d = (0, i.up)('QuizPage'); return (0, i.wg)(), (0, i.iD)(i.HY, null, [(0, i._)('img', { style: { padding: '5px' }, width: '15%', height: '15%', alt: 'logo', src: r, onClick: t[0] || (t[0] = (...e) => h.clickIcon && h.clickIcon(...e)) }), (0, i.wy)((0, i._)('h2', null, [(0, i.Uk)((0, n.zw)(u.showMsg) + ' ', 1), l, (0, i.Uk)(' ' + (0, n.zw)(u.countDownMsg), 1)], 512), [[o.F8, u.showMsg.length > 0]]), (0, i._)('div', a, [(0, i.Wm)(d)])], 64) }s(560); const u = s.p + 'img/mushroom.fdb0a1c8.gif'; const h = e => ((0, i.dD)('data-v-74f41ffd'), e = e(), (0, i.Cn)(), e); const d = { id: 'quiz', class: 'container mt-3' }; const w = h(() => (0, i._)('h1', null, '大家認識的波普貓', -1)); const m = { key: 0 }; const g = h(() => (0, i._)('br', null, null, -1)); const p = { class: 'form-group' }; const b = { key: 1 }; const _ = { key: 0 }; const y = h(() => (0, i._)('h6', { style: { 'font-size': 'medium' } }, '(建議先選擇答題再出題)', -1)); const f = { key: 1, class: 'd-grid gap-2 d-md-block mx-auto' }; const k = { class: 'mb-3' }; const v = h(() => (0, i._)('br', null, null, -1)); const z = { key: 0, class: 'alert alert-success d-flex align-items-center', role: 'alert' }; const x = h(() => (0, i._)('svg', { class: 'bi flex-shrink-0 me-2', width: '24', height: '24', role: 'img', 'aria-label': 'Success:' }, [(0, i._)('use', { 'xlink:href': '#check-circle-fill' })], -1)); const D = h(() => (0, i._)('div', null, ' 題目建立成功！ ', -1)); const Q = [x, D]; const q = h(() => (0, i._)('h2', null, '新增問題', -1)); const B = { class: 'mb-3' }; const A = h(() => (0, i._)('label', { for: 'setQuestion', class: 'form-label' }, '題目：', -1)); const E = { class: 'row' }; const S = { class: 'mb-3' }; const C = h(() => (0, i._)('label', { for: 'choiceA', class: 'form-label' }, '選項 A：', -1)); const I = { class: 'mb-3' }; const T = h(() => (0, i._)('label', { for: 'choiceB', class: 'form-label' }, '選項 B：', -1)); const L = h(() => (0, i._)('button', { type: 'submit', class: 'btn btn-primary' }, '送出', -1)); const U = { key: 2 }; const G = { key: 0 }; const M = { class: 'mx-auto' }; const j = { class: 'mt-4', style: { 'font-size': 'large' } }; const Y = { class: 'mt' }; const K = { key: 0, class: 'd-grid gap-2 col-6 mx-auto' }; const N = { key: 1, class: 'd-grid gap-2 mx-auto' }; const P = { class: 'row' }; const V = { class: 'col-6' }; const $ = { class: 'mt-4' }; const O = { class: 'mt-2', style: { 'font-size': 'large' } }; const H = { class: 'user-names' }; const R = { class: 'col-6' }; const F = { class: 'mt-4' }; const W = { class: 'mt-2', style: { 'font-size': 'large' } }; const Z = { class: 'user-names' }; const J = { key: 1 }; const X = h(() => (0, i._)('h3', null, '你已經回答過所有題目了，去打蘑菇吧!', -1)); const ee = h(() => (0, i._)('br', null, null, -1)); const te = h(() => (0, i._)('h4', null, '特別感謝:', -1)); const se = h(() => (0, i._)('h5', null, '一尾懶鯉魚 大哥哥', -1)); const ie = h(() => (0, i._)('h5', null, '白澤 大哥哥', -1)); const ne = h(() => (0, i._)('h5', null, '吐司 大哥哥', -1)); const oe = h(() => (0, i._)('br', null, null, -1)); const re = h(() => (0, i._)('br', null, null, -1)); const le = { class: 'd-grid gap-2 d-md-block mx-auto' }; const ae = { class: 'mx-auto' }; const ce = { key: 0 }; const ue = h(() => (0, i._)('h4', null, '已舉報成功', -1)); const he = [ue]; const de = { key: 1 }; const we = ['onClick']; const me = { class: 'mt-4', style: { 'font-size': 'large' } }; const ge = { class: 'mt' }; const pe = { class: 'row' }; const be = { class: 'col-6' }; const _e = { class: 'mt-4' }; const ye = { class: 'mt-2', style: { 'font-size': 'large' } }; const fe = { class: 'user-names' }; const ke = { class: 'col-6' }; const ve = { class: 'mt-4' }; const ze = { class: 'mt-2', style: { 'font-size': 'large' } }; const xe = { class: 'user-names' }; const De = h(() => (0, i._)('br', null, null, -1)); const Qe = h(() => (0, i._)('h3', null, ' ~~~~~~~~~~~~~~~~~~~~ ', -1)); const qe = h(() => (0, i._)('br', null, null, -1)); const Be = h(() => (0, i._)('img', { id: 'cuteGif', src: u, alt: 'Mushroom GIF', style: { width: '200px', height: '200px' } }, null, -1)); const Ae = [Be]; function Ee (e, t, s, r, l, a) { return (0, i.wg)(), (0, i.iD)('div', d, [w, l.nickname ? ((0, i.wg)(), (0, i.iD)('div', b, [l.quizStarted ? (0, i.kq)('', !0) : ((0, i.wg)(), (0, i.iD)('div', _, [(0, i._)('h3', null, 'Hi ' + (0, n.zw)(l.nickname) + ' ᓚᘏᗢ', 1), y])), l.quizStarted ? ((0, i.wg)(), (0, i.iD)('div', U, [l.question ? ((0, i.wg)(), (0, i.iD)('div', G, [(0, i._)('div', M, [(0, i._)('h2', j, '出題者: ' + (0, n.zw)(l.author), 1), (0, i._)('h2', Y, 'Q: ' + (0, n.zw)(l.question), 1)]), l.isAnswered ? ((0, i.wg)(), (0, i.iD)('div', N, [(0, i._)('div', P, [(0, i._)('div', V, [(0, i._)('h2', $, (0, n.zw)(l.choiceA), 1), (0, i._)('h2', O, '共 ' + (0, n.zw)(l.answeredBy.A.length) + ' 人', 1), (0, i._)('div', H, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)(l.answeredBy.A, (e, t) => ((0, i.wg)(), (0, i.iD)('span', { key: t, class: 'user-name' }, (0, n.zw)(e), 1))), 128))])]), (0, i._)('div', R, [(0, i._)('h2', F, (0, n.zw)(l.choiceB), 1), (0, i._)('h2', W, '共 ' + (0, n.zw)(l.answeredBy.B.length) + ' 人', 1), (0, i._)('div', Z, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)(l.answeredBy.B, (e, t) => ((0, i.wg)(), (0, i.iD)('span', { key: t, class: 'user-name' }, (0, n.zw)(e), 1))), 128))])])]), (0, i._)('button', { class: 'btn btn-outline-primary btn-lg', onClick: t[10] || (t[10] = (...e) => a.getNextQuestion && a.getNextQuestion(...e)) }, '下一題')])) : ((0, i.wg)(), (0, i.iD)('div', K, [(0, i._)('button', { class: 'btn btn-outline-primary btn-lg mr-2', onClick: t[8] || (t[8] = e => a.submitAnswer('A')) }, (0, n.zw)(l.choiceA), 1), (0, i._)('button', { class: 'btn btn-outline-primary btn-lg', onClick: t[9] || (t[9] = e => a.submitAnswer('B')) }, (0, n.zw)(l.choiceB), 1)]))])) : ((0, i.wg)(), (0, i.iD)('div', J, [X, ee, te, se, ie, ne, oe, (0, i._)('button', { class: 'btn btn-primary mx-2 mt-2', onClick: t[11] || (t[11] = (...e) => a.getQuestionList && a.getQuestionList(...e)) }, '列出所有題目'), re, (0, i._)('div', le, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)(l.quizzes, (e, t) => ((0, i.wg)(), (0, i.iD)('div', { key: t }, [(0, i._)('div', ae, [e.reported ? ((0, i.wg)(), (0, i.iD)('div', ce, he)) : ((0, i.wg)(), (0, i.iD)('div', de, [(0, i._)('button', { class: 'btn btn-warning btn-sm', onClick: e => a.reportQuestion(t) }, (0, n.zw)(e.reportChecked ? '真的要舉報嗎?' : '舉報'), 9, we)])), (0, i._)('h2', me, '出題者: ' + (0, n.zw)(e.author), 1), (0, i._)('h2', ge, 'Q: ' + (0, n.zw)(e.question), 1)]), (0, i._)('div', pe, [(0, i._)('div', be, [(0, i._)('h2', _e, (0, n.zw)(e.choices[0]), 1), (0, i._)('h2', ye, '共 ' + (0, n.zw)(e.answered_by[0].length) + ' 人', 1), (0, i._)('div', fe, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)(e.answered_by[0], (e, t) => ((0, i.wg)(), (0, i.iD)('span', { key: t, class: 'user-name' }, (0, n.zw)(e), 1))), 128))])]), (0, i._)('div', ke, [(0, i._)('h2', ve, (0, n.zw)(e.choices[1]), 1), (0, i._)('h2', ze, '共 ' + (0, n.zw)(e.answered_by[1].length) + ' 人', 1), (0, i._)('div', xe, [((0, i.wg)(!0), (0, i.iD)(i.HY, null, (0, i.Ko)(e.answered_by[1], (e, t) => ((0, i.wg)(), (0, i.iD)('span', { key: t, class: 'user-name' }, (0, n.zw)(e), 1))), 128))])])]), De, Qe, qe]))), 128))])]))])) : ((0, i.wg)(), (0, i.iD)('div', f, [(0, i._)('button', { class: 'btn btn-primary mx-2', onClick: t[2] || (t[2] = (...e) => a.startQuiz && a.startQuiz(...e)) }, '答題'), (0, i._)('button', { class: 'btn btn-primary mx-2', onClick: t[3] || (t[3] = e => l.isSetQuestion = !l.isSetQuestion) }, '出題'), (0, i.wy)((0, i._)('div', k, [v, l.isSubmitSuccess ? ((0, i.wg)(), (0, i.iD)('div', z, Q)) : (0, i.kq)('', !0), q, (0, i._)('form', { onSubmit: t[7] || (t[7] = (0, o.iM)((...e) => a.submitQuiz && a.submitQuiz(...e), ['prevent'])) }, [(0, i._)('div', B, [A, (0, i.wy)((0, i._)('textarea', { class: 'form-control', id: 'setQuestion', 'onUpdate:modelValue': t[4] || (t[4] = e => l.setQuestion = e), placeholder: '題目', required: '' }, null, 512), [[o.nr, l.setQuestion]])]), (0, i._)('div', E, [(0, i._)('div', S, [C, (0, i.wy)((0, i._)('input', { type: 'text', class: 'form-control', id: 'choiceA', 'onUpdate:modelValue': t[5] || (t[5] = e => l.choiceA = e), placeholder: '選項A', required: '' }, null, 512), [[o.nr, l.choiceA]])]), (0, i._)('div', I, [T, (0, i.wy)((0, i._)('input', { type: 'text', class: 'form-control', id: 'choiceB', 'onUpdate:modelValue': t[6] || (t[6] = e => l.choiceB = e), placeholder: '選項B', required: '' }, null, 512), [[o.nr, l.choiceB]])])]), L], 32)], 512), [[o.F8, l.isSetQuestion]])]))])) : ((0, i.wg)(), (0, i.iD)('div', m, [g, (0, i.Uk)(' 這裡輸入你的名字，不是輸入你認識的波普貓(這個等會兒): '), (0, i._)('div', p, [(0, i.wy)((0, i._)('input', { type: 'text', class: 'col-4 mx-auto form-control', 'onUpdate:modelValue': t[0] || (t[0] = e => l.nicknameInput = e), placeholder: '輸入名稱' }, null, 512), [[o.nr, l.nicknameInput]])]), (0, i._)('button', { class: 'btn btn-primary mt-2', onClick: t[1] || (t[1] = (...e) => a.setNickname && a.setNickname(...e)) }, '確定名稱')])), (0, i._)('div', { onClick: t[12] || (t[12] = (...e) => a.clickMushroom && a.clickMushroom(...e)) }, Ae)]) } const Se = { name: 'QuizPage', props: { msg: String }, el: '#quiz', data () { return { cuteGif: null, nicknameInput: '', nickname: '', quizStarted: !1, author: '', questionId: '', question: '', choiceA: '', choiceB: '', isAnswered: !1, answeredBy: [[]], isSetQuestion: !1, isSubmitSuccess: !1, setQuestion: '', quizzes: {} } }, mounted () { const e = (e, t) => { t || (t = window.location.href), e = e.replace(/[[\]]/g, '\\$&'); const s = new RegExp('[?&]' + e + '(=([^&#]*)|&|#|$)'); const i = s.exec(t); return i ? i[2] ? decodeURIComponent(i[2].replace(/\+/g, ' ')) : '' : null }; e('username') && (this.nickname = e('username')), this.cuteGif = document.getElementById('cuteGif'), setTimeout(() => { this.animate() }, 3e4) }, methods: { setNickname () { this.nickname = this.nicknameInput.trim() }, startQuiz () { this.quizStarted = !0, this.getNextQuestion() }, getNextQuestion () { this.isAnswered = !1, fetch(`https://gordon-the-owl.tw/api/quiz?username=${this.nickname}`, { method: 'GET' }).then(e => e.json()).then(e => { this.author = e.author, this.questionId = e.id, this.question = e.question, this.question.length !== 0 && (this.choiceA = e.choices[0], this.choiceB = e.choices[1], this.answeredBy.A = e.answered_by[0] ? e.answered_by[0] : '', this.answeredBy.B = e.answered_by[1] ? e.answered_by[1] : '') }).catch(e => { console.error('getNextQuestion Error:', e) }) }, submitAnswer (e) { fetch('https://gordon-the-owl.tw/api/quiz', { method: 'POST', body: JSON.stringify({ quiz_id: this.questionId, answer: e, username: this.nickname }), headers: { 'Content-Type': 'application/json' } }).then(e => e.json()).then(t => { t.message === 'answerQuiz success' && (this.isAnswered = !0, e === 'A' ? this.answeredBy.A.length === 0 ? this.answeredBy.A = [this.nickname] : this.answeredBy.A.push(this.nickname) : this.answeredBy.B.length === 0 ? this.answeredBy.B = [this.nickname] : this.answeredBy.B.push(this.nickname)) }).catch(e => { console.error('submitAnswer Error:', e) }) }, submitQuiz () { const e = { question: this.setQuestion, choices: [this.choiceA, this.choiceB], author: this.nickname }; fetch('https://gordon-the-owl.tw/api/quiz', { method: 'PUT', body: JSON.stringify(e), headers: { 'Content-Type': 'application/json' } }).then(e => { e.ok ? (this.setQuestion = '', this.choiceA = '', this.choiceB = '', this.isSubmitSuccess = !0, setTimeout(() => { this.isSubmitSuccess = !1, this.isSetQuestion = !1 }, 2e3)) : console.error('Failed to submit quiz.') }).catch(e => { console.error('getNextQuestion Error:', e) }) }, getQuestionList () { fetch('https://gordon-the-owl.tw/api/quiz/list', { method: 'GET' }).then(e => e.json()).then(e => { this.quizzes = e }).catch(e => { console.error('getQuestionList Error:', e) }) }, reportQuestion (e) { this.quizzes[e].reportChecked ? (fetch(`https://gordon-the-owl.tw/api/quiz?qid=${e}&username=${this.nickname}`, { method: 'DELETE' }).then(t => { t.ok && console.log('reportQuestion success key: ', e) }).catch(t => { console.error('reportQuestion err:', t, ', key: ', e) }), this.quizzes[e].reported = !0) : this.quizzes[e].reportChecked = !0 }, clickMushroom () { this.$router.push('/mole?username=' + this.nickname) }, animate () { let e = -200; const t = 3; this.cuteGif.style.display = 'block', this.cuteGif.style.left = '-200px', this.cuteGif.style.bottom = '0'; const s = setInterval(() => { e += t, this.cuteGif.style.left = e + 'px', e >= window.innerWidth && (clearInterval(s), this.cuteGif.style.display = 'none', setTimeout(() => { this.animate() }, 3e4)) }, 10) } } }; const Ce = s(89); const Ie = (0, Ce.Z)(Se, [['render', Ee], ['__scopeId', 'data-v-74f41ffd']]); const Te = Ie; const Le = { name: 'QuizView', data () { return { showMsg: '', countDownMsg: '', countDownInterval: null, esterEggCount: 0 } }, components: { QuizPage: Te }, methods: { clickIcon () { this.esterEggCount += 1, this.esterEggCount === 5 && fetch('https://gordon-the-owl.tw/api/easter_egg', { method: 'GET', headers: { 'Content-Type': 'application/json' } }).then(e => e.json()).then(e => { e.message === 'EasterEgg Activated' ? (this.activateEasterEgg(), this.$router.push('/easter_egg')) : (this.showMsg = '\\我知道你很急，但你先別急/\n', e.start_at > 0 && (this.countDown(e.start_at), this.countDownInterval = setInterval(() => { this.countDown(e.start_at) }, 1e3)), this.esterEggCount = 0, setTimeout(() => { clearInterval(this.countDownInterval), this.showMsg = '', this.countDownMsg = '' }, 1e4)) }).catch(e => { console.error('fetch /api/easter_egg Error:', e) }) }, countDown (e) { const t = e; const s = Math.floor(Date.now() / 1e3); const i = t - s; const n = Math.floor(i / 3600); const o = Math.floor(i % 3600 / 60); const r = i % 60; this.countDownMsg = `倒數: ${n} 小時 ${o} 分鐘 ${r} 秒\n` }, activateEasterEgg () { fetch(`https://gordon-the-owl.tw/api/easter_egg?username=${this.nickname}`, { method: 'POST' }) } } }; const Ue = (0, Ce.Z)(Le, [['render', c]]); var Ge = Ue }, 6293: function (e, t, s) { s.r(t), s.d(t, { default: function () { return _ } }); const i = s(3396); const n = { class: 'share' }; const o = (0, i._)('h1', null, '不知道這一頁要放甚麼，就分享一些好料的', -1); const r = (0, i._)('iframe', { width: '100%', height: '600', scrolling: 'no', frameborder: 'no', allow: 'autoplay', src: 'https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/228593349&color=%23745c6c&auto_play=true&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true' }, null, -1); const l = (0, i._)('div', { style: { 'font-size': '10px', color: '#cccccc', 'line-break': 'anywhere', 'word-break': 'normal', overflow: 'hidden', 'white-space': 'nowrap', 'text-overflow': 'ellipsis', 'font-family': 'Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif', 'font-weight': '100' } }, [(0, i._)('a', { href: 'https://soundcloud.com/engblue', title: 'EngBlue波普貓在英格藍', target: '_blank', style: { color: '#cccccc', 'text-decoration': 'none' } }, 'EngBlue波普貓在英格藍'), (0, i._)('a', { href: 'https://soundcloud.com/engblue/lost-stars-keira-knightleycover', title: 'Lost Stars - Keira Knightley(cover)', target: '_blank', style: { color: '#cccccc', 'text-decoration': 'none' } }, 'Lost Stars - Keira Knightley(cover)')], -1); const a = (0, i._)('br', null, null, -1); const c = (0, i._)('div', null, [(0, i._)('h3', null, [(0, i._)('a', { href: 'https://www.youtube.com/@baize0w0', target: '_blank', title: '白澤大哥哥的頻道' }, '白澤大哥哥的頻道')]), (0, i._)('iframe', { width: '100%', height: '315', src: 'https://www.youtube.com/embed/H64j35Un99g?si=DxrjVf-upVVbWPbs', title: 'YouTube video player', frameborder: '0', allow: 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share', allowfullscreen: '' })], -1); const u = (0, i._)('br', null, null, -1); const h = (0, i._)('div', null, [(0, i._)('h3', null, [(0, i._)('a', { href: 'https://www.youtube.com/@silence3u06', target: '_blank', title: '威廉大哥哥的頻道' }, '威廉大哥哥的頻道')]), (0, i._)('iframe', { width: '100%', height: '315', src: 'https://www.youtube.com/embed/4iDU1GN3ssc?si=p0nzBa_TrA9qYSm0', title: 'YouTube video player', frameborder: '0', allow: 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share', allowfullscreen: '' })], -1); const d = (0, i.uE)('<br><div><h3><a href="https://www.youtube.com/channel/UCBLGjbYv6-xxju1i44RjnnA" target="_blank" title="明透 -ᴀsu-">明透 -ᴀsu-</a></h3><iframe src="https://www.youtube.com/embed/videoseries?list=OLAK5uy_mHznvDVd-q4oxW5TOkt8vgpIRYsz0gQKY" width="100%" height="315"></iframe></div><br><div><h3><a href="https://www.youtube.com/@LOLUET" target="_blank" title="LOLUET">LOLUET</a></h3><iframe src="https://www.youtube.com/embed/videoseries?list=PLQ4eIpo7ZyeuTC97V-w0sj16Q8zXx3yBU&amp;index=1" width="100%" height="315"></iframe></div><br><div><h3><a href="https://www.youtube.com/@rayray_429" target="_blank" title="來-Ray-">來-Ray-</a></h3><iframe src="https://www.youtube.com/embed/videoseries?list=PLozd0hi0a-PRJIl3dXDTFYshZ1YM07a2W" width="100%" height="315"></iframe></div><br><div><h3><a href="https://www.youtube.com/@ChogakuseiOfficial" target="_blank" title="超学生-">超学生</a></h3><iframe src="https://www.youtube.com/embed/videoseries?list=UULPxIK6x6sG7Ln5vjjPYpgeAw" width="100%" height="315"></iframe></div><br>', 9); const w = [o, r, l, a, c, u, h, d]; function m (e, t) { return (0, i.wg)(), (0, i.iD)('div', n, w) } const g = s(89); const p = {}; const b = (0, g.Z)(p, [['render', m]]); var _ = b } }])
// # sourceMappingURL=share.5820c404.js.map
